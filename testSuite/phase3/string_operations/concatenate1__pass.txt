Concatenate operation works on two strings.
This is a valid program.

Expected Output:
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
  oSymbolStkPushLocalIdentifier
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
  oSymbolTblEnter
  oSymbolStkPop
  oTypeStkPop
  oValuePop
 oCountPop
   oSymbolStkPushLocalIdentifier
   .tInitialValue
     oSymbolStkPush(syExpression)
      .tSkipString
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      .tStringData
      oValuePushStringLength
      oEmitValue
      oValuePop
      oValuePushCodeAddress
      oValueNegate
      oEmitString
      % value emitted 104
      % value emitted 101
      % value emitted 108
      % value emitted 108
      % value emitted 111
      % value emitted 0
      oFixPopForwardBranch
      oTypeStkPush(tpChar)
      oTypeStkLinkToStandardType(stdChar)
     .tLiteralAddress
     .tFetchChar
     oEmitValue
     oValuePop
     oSymbolStkPush(syExpression)
      .tSkipString
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      .tStringData
      oValuePushStringLength
      oEmitValue
      oValuePop
      oValuePushCodeAddress
      oValueNegate
      oEmitString
      % value emitted 119
      % value emitted 111
      % value emitted 114
      % value emitted 108
      % value emitted 100
      % value emitted 0
      oFixPopForwardBranch
      oTypeStkPush(tpChar)
      oTypeStkLinkToStandardType(stdChar)
     .tLiteralAddress
     .tFetchChar
     oEmitValue
     oValuePop
     .tConcatenate
     oTypeStkPush(tpChar)
       oTypeStkSwap
      oTypeStkPop
       oTypeStkSwap
      oTypeStkPop
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
     oSymbolStkSetKind(syExpression)
   oSymbolStkPop
    oTypeTblEnter
    oSymbolStkSetKind(syVariable)
     oSymbolStkEnterDataAddress
     oAllocateVariable
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
   .tLiteralInteger
   .tLiteralAddress
    .tStoreChar
   oTypeStkPop
   oSymbolStkPop
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
