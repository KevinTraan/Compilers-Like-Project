Calling a public constant variable in a package is valid

Expected output when run with grep command "./runTests3.sh g":
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
  oSymbolStkPushLocalIdentifier
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
  oSymbolTblEnter
  oSymbolStkPop
  oTypeStkPop
  oValuePop
 oCountPop
   oSymbolStkPushLocalIdentifier
   oSymbolStkSetKind(syPackage)
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
     oSymbolStkPushLocalIdentifier
     oSymbolStkSetKind(syConstant)
      oSymbolStkSetPublicFlag
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      oValuePushInteger
     oSymbolStkEnterTypeReference
     oTypeStkPop
     oSymbolStkEnterValue
     oValuePop
     oSymbolTblEnter
     oSymbolStkPop
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   oSymbolStkPushLocalIdentifier
   .tInitialValue
     oSymbolStkPushIdentifier
      oTypeStkPushSymbol
      oValuePushSymbol
      .tLiteralInteger
      oEmitValue
      % value emitted 1
      oValuePop
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 1
     oValuePop
     .tAdd
     oTypeStkPush(tpInteger)
       oTypeStkSwap
      oTypeStkPop
       oTypeStkSwap
      oTypeStkPop
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
     oSymbolStkSetKind(syExpression)
   oSymbolStkPop
    oTypeTblEnter
    oSymbolStkSetKind(syVariable)
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
   .tLiteralInteger
   .tLiteralAddress
    .tStoreInteger
   oTypeStkPop
   oSymbolStkPop
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
