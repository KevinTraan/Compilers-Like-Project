Calling a function with no parameters is valid.

Expected output when run with grep command "./runTests3.sh g":
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
  oSymbolStkPushLocalIdentifier
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
  oSymbolTblEnter
  oSymbolStkPop
  oTypeStkPop
  oValuePop
 oCountPop
   oSymbolStkPushLocalIdentifier
   .tInitialValue
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 1
     oValuePop
   oSymbolStkPop
    oSymbolStkSetKind(syVariable)
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
   .tLiteralInteger
   .tLiteralAddress
    .tStoreInteger
   oTypeStkPop
   oSymbolStkPop
   oSymbolStkPushLocalIdentifier
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
    oCountPush(zero)
      oValuePushCount
      oCountPushValue
      oValuePop
     oCountPop
     .tParmEnd
     oTypeStkEnterParameterCount
     oCountPop
     oSymbolStkPushIdentifier
     .tAssignBegin
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      oTypeStkPushSymbol
       oSymbolStkPushIdentifier
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 4
        oValuePop
        oTypeStkPushSymbol
        .tFetchInteger
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 1
       oValuePop
       .tAdd
       oTypeStkPush(tpInteger)
         oTypeStkSwap
        oTypeStkPop
         oTypeStkSwap
        oTypeStkPop
        oSymbolStkPop
        oSymbolStkSetKind(syExpression)
       oSymbolStkSetKind(syExpression)
      oTypeStkSwap
      .tAssignInteger
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   oSymbolStkPushIdentifier
   .tCallBegin
   oTypeStkPushSymbol
    oCountPush(zero)
    oCountPop
   .tCallEnd
   oValuePushSymbol
   oEmitValue
   % value emitted 21
   oValuePop
   oTypeStkPop
   oSymbolStkPop
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
